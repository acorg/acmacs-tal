# Time-stamp: <2019-12-13 11:31:17 eu>

* Command line defines

-D whocc --> match seqdb

-D report-cumulative-output=-  write cumulative report to stdout
-D report-cumulative-output=filename  write cumulative report to filename

-D report-time-series-output=-  write time-series report to stdout
-D report-time-series-output=filename  write time-series report to filename

-D ladderize-method=max-edge-length  (number-of-leaves is default)

* TODO


* Settings features

{"N": "if", "condition": {"and": ["{whocc}", {"not": "tree-has-sequences"}, {"or": ["{xxx}", {"not": "{yyy}"}]}, {"not-empty": "{virus-type}"}]}, "then": [{"N": ...}], "else": [{"N": ...}]}

* Select nodes and operate on selection

** general

{"N": "nodes", "select": {<[[Select Nodes]]>}, "apply": "<operation>"}
{"N": "nodes", "select": {<[[Select Nodes]]>}, "apply": {"<operation>": true}}
{"N": "nodes", "select": {<[[Select Nodes]]>}, "apply": {"<operation>": <value>, "<arg>": <value>, ...}}
{"N": "nodes", "select": {<[[Select Nodes]]>}, "apply": [{<[[Operation on selected nodes]]>}, ...]}

"apply" clause may include one (then using array is optional) or
several operations, each operation is a string (operation name) or an
object.

** Select Nodes

If multiple criteria specified within single "select" object, they all used (conjunction)

{"all": true}
{"aa": ["192Q", "!123E"]}
{"cumulative >=": 0.01, "report": true}
{"edge >=": 0.01, "report": true}
{"date": ["start >=", "end <", "report": true}
{"seq_id": "regexp", "report": true}
{"vaccine": {"type": "current", "passage": "cell"}, "report": true}
{"matches-chart-antigen": true, "report": true}
{"matches-chart-serum": "name|reassortant|passage", "report": true} -- name only, name+reassortant, name+reassortant+passage_type

** Operations on selected nodes

*** Hide

{"N": "nodes", "select": {<[[Select Nodes]]>}, "apply": "hide"}
{"N": "nodes", "select": {<[[Select Nodes]]>}, "apply": {"hide": true}}
{"N": "nodes", "select": {<[[Select Nodes]]>}, "apply": ["hide"]}
{"N": "nodes", "select": {<[[Select Nodes]]>}, "apply": [{"hide": true}]}

**** samples

***** hide if cumulative edge length bigger than
{"N": "nodes", "select": {"cumulative >=": 0.01, "report": true}, "apply": "hide"}

***** hide if edge length bigger than
{"N": "nodes", "select": {"edge >=": 0.01, "report": true}, "apply": "hide"}

***** hide if edge length bigger than the mean edge length of longest (by edge) N (fraction or absolute) nodes
{"N": "nodes", "select": {"edge >= mean_edge of": 0.01, "report": true}, "apply": "hide"}
{"N": "nodes", "select": {"edge >= mean_edge of": 100, "report": true}, "apply": "hide"}

***** hide isolated before
{"N": "nodes", "select": {"date": ["", "2017"], "report": true}, "apply": "hide"}

***** hide by regexp
{"N": "nodes", "select": {"seq_id": "/SWINE/", "report": true}, "apply": "hide"}

***** hide by aa
{"N": "nodes", "select": {"aa": "159F", "report": true}, "apply": "hide"}

*** Color and other parameters

{"tree-label": "red"}
{"time-series-dash": "red"}
{"tree-edge-line": "red"}
{"tree-edge-line-width": 2.0} -- relative to the inferred line width for all edge lines

*** Just report selected

{"N": "nodes", "select": {<[[Select Nodes]]>}, "apply": "report"}

* Settings

** Tree

{"N": "if", "condition": {"and": ["{whocc}", {"not": "tree-has-sequences"}]}, "then": [{"N": "seqdb", "filename": "{seqdb-filename}"}]}
{"N": "seqdb", "filename": "{seqdb-filename}"}

- {"N": "clade", "subtype": "A(H3N2)"} detect clade (only if aa_sequence present) based on given criteria

{"N": "ladderize", "method": "number-of-leaves", "?method": "max-edge-length"}
{"N": "re-root", "new-root": <seq-id>}

{"N": "aa-transitions", "report": false} -- use upon hiding nodes

{"N": "nodes", "select": <select>, "apply": <node-apply>} -- See [[Node modifications][Node modifications]]

{"N": "clades-reset"}
{"N": "clade", "name": "3C.2A1B", "display_name": "2A1B", "substitutions": ["92R", "121K", "158N", "159Y", "171K", "311Q", "406V", "484E"], "report": false}
-- "inclusion_tolerance": "{clade_section_inclusion_tolerance}", "exclusion_tolerance": "{clade_section_exclusion_tolerance}"}

** Report

{"N": "report-cumulative", "output": "{report-cumulative-output}", "all": false}
{"N": "report-time-series", "output": "{report-time-series-output}"}

** Draw

{"N": "margins", "left": 0.025, "right": 0.025, "top": 0.025, "bottom": 0.025, "debug_outline": <[[Debug outline][debug-outline]]>},

** Layout

*** Gap

{"N": "gap", "width_to_height_ratio": 0.1, "debug_outline": <[[Debug outline][debug-outline]]>},

*** Tree

{"N": "tree", "color_by": <[[Color by][color-by]]>, "width_to_height_ratio": 0.7, "debug_outline": <[[Debug outline][debug-outline]]>},

*** Time series

{"N": "time_series", "color_by": <[[Color by][color-by]]>,
 "start": "2019-01", "end": "2019-11", "?": "start is inclusive, end is exclusive",
 "interval": {"month": 1}, "?": "month, week, year, day",
 "?interval": "month"
 "dash": {"width": 0.5, "line_width_pixels": 0.5}, "?": "dash width is fraction of slot_width",
 "slot": {"width": 0.01, "?": "fraction of the time series area height",
          "separator": {"width_pixels": 0.5, "color": "black"},
          "label": {"rotation": "anticlockwise", "color": "black", "scale": 0.7, "offset": 0.002}, "?": "scale relative to slot_width, offset relative to the time series area height"
         },
 "width_to_height_ratio": 0.7, "debug_outline": <[[Debug outline][debug-outline]]>},

*** Clade

{"N": "clades", "report": true,
 "slot": {"width": 0.02}, "?slot?": "width relative to the clades area height",
 "all_clades": {<[[Clade parameters]]>},
 "per_clade": [{<[[Clade parameters]]>}, ...],
 "?width_to_height_ratio": 0.3, "debug_outline": <[[Debug outline][debug-outline]]>},

**** Clade parameters

{"name": "183P-1", "display_name": "183P-1",
 "shown": true, "show": true, "hidden": false,
 "slot": 1,
 "top_gap": 0.05, "bottom_gap": 0.05, "?top_gap?": "fraction of area height",
 "time_series_top_separator": true, "time_series_bottom_separator": true,
 "section_inclusion_tolerance": 10, "section_exclusion_tolerance": 5,
 "label": {<[[Label parameters]]>},
 "arrow": {"color": "black", "line_width": 1, "arrow_width": 3.0}, "?arrow?": "line_width and arrow_width are in pixels",
 "horizontal_line": {"color": "grey", "line_width": 0.5}, "?horizontal_line?": "line_width in pixels",
}

*** Title

{"N": "title", "display_name": "{virus-type/lineage}", "offset": [0.1, 0.1], "color": "black", "size": 0.05}

*** Legend

{"N": "legend", "type": "world-map", "offset": [0.0, 0.9], "size": 0.1}

*** Label parameters
"label": {"text": "",
          "rotation_degrees": 0, "color": "black",
          "scale": 0.5, "?scale?": "scale is a fraction of the slot width in clades"
          "vertical_position": "middle|top|bottom",
          "horizontal_position": "left|middle|right",
          "offset": [0.002, 0.0], "?offset?": "offset is a fraction of the area height"
}

* Debug outline

"debug_outline": true
"debug_outline": false
"debug_outline": "pink"
"debug_outline": {"show": true, "color": "pink", "width": 2}

* Color by

"color_by": "uniform"
"color_by": {"N": "uniform", "color": "red"}

"color_by": "continent"
"color_by": {"N": "continent", "EUROPE": "#00A800", "CENTRAL-AMERICA": "#70A4A8", "MIDDLE-EAST": "#8000FF", "NORTH-AMERICA": "#00008B", "AFRICA": "#FF8000", "ASIA": "#FF0000", "RUSSIA": "#B03060", "AUSTRALIA-OCEANIA": "#FF69B4", "SOUTH-AMERICA": "#40E0D0", "ANTARCTICA": "#808080", "CHINA-SOUTH": "#FF0000", "CHINA-NORTH": "#6495ED", "CHINA-UNKNOWN": "#808080", "UNKNOWN": "#808080"}

"color_by": {"N": "pos", "pos": 192}

* COMMENT ====== local vars
:PROPERTIES:
:VISIBILITY: folded
:END:
#+STARTUP: showall indent
Local Variables:
eval: (auto-fill-mode 0)
eval: (add-hook 'before-save-hook 'time-stamp)
eval: (set (make-local-variable org-confirm-elisp-link-function) nil)
End:
